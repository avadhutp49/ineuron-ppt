  public List<Integer> countSmaller(int[] nums) {
        int minVal = Integer.MAX_VALUE;
        int maxVal = Integer.MIN_VALUE;

        for (int num : nums) {
            minVal = Math.min(minVal, num);
        }

        for (int i = 0; i < nums.length; i++) {
            nums[i] = nums[i] - minVal + 1;
            maxVal = Math.max(maxVal, nums[i]);
        }

        int[] fenwickTree = new int[maxVal + 1];
        List<Integer> result = new ArrayList<>();

        for (int i = nums.length - 1; i >= 0; i--) {
            result.add(0, query(fenwickTree, nums[i] - 1));
            update(fenwickTree, nums[i]);
        }

        return result;
    }

    private int query(int[] fenwickTree, int index) {
        int sum = 0;
        while (index > 0) {
            sum += fenwickTree[index];
            index -= index & -index;
        }
        return sum;
    }

    private void update(int[] fenwickTree, int index) {
        while (index < fenwickTree.length) {
            fenwickTree[index]++;
            index += index & -index;
        }
    }