public int[] findOriginalArray(int[] changed) {
    int n = changed.length;

    if (n % 2 != 0) {
        return new int[0];
    }

    Map<Integer, Integer> frequency = new HashMap<>();
    for (int num : changed) {
        frequency.put(num, frequency.getOrDefault(num, 0) + 1);
    }

    Arrays.sort(changed);

    List<Integer> originalList = new ArrayList<>();
    for (int num : changed) {
        if (frequency.getOrDefault(num, 0) == 0) {
            continue;
        }
        originalList.add(num);
        frequency.put(num, frequency.get(num) - 1);
        frequency.put(num * 2, frequency.getOrDefault(num * 2, 0) - 1);
    }

    if (originalList.size() != n / 2) {
        return new int[0];
    }

    int[] original = new int[originalList.size()];
    for (int i = 0; i < originalList.size(); i++) {
        original[i] = originalList.get(i);
    }

    return original;
}
